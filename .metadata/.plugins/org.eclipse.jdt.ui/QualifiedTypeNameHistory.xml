<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="com.geertenvink.Bardiche.Templates.BardicheDomainTemplate"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.Universe"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.IntentionalOperator"/>
<fullyQualifiedTypeName name="com.geertenvink.Bardiche.Templates.BardicheProblemTemplate"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.AxiomTemplate"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.io.SimpleExtension"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.logic.Variable"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.io.Parser"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.io.ParseException"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.io.pddl.intp.IntentionalOperatorExtension"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.logic.Constant"/>
<fullyQualifiedTypeName name="com.stephengware.java.glaive.AgentGoal"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.util.ArrayIterator"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.IntentionalStep"/>
<fullyQualifiedTypeName name="javax.swing.text.html.HTMLDocument.Iterator"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.search.HeuristicSearch"/>
<fullyQualifiedTypeName name="com.stephengware.java.glaive.DefaultGlaiveSearch"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.Plan"/>
<fullyQualifiedTypeName name="com.stephengware.java.glaive.CausalState"/>
<fullyQualifiedTypeName name="java.lang.Override"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.logic.Term"/>
<fullyQualifiedTypeName name="java.io.BufferedReader"/>
<fullyQualifiedTypeName name="java.io.InputStreamReader"/>
<fullyQualifiedTypeName name="java.util.Iterator"/>
<fullyQualifiedTypeName name="com.geertenvink.Bardiche.io.IOHandler"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.logic.Predication"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.NonDeterministicException"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.logic.Negation"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.logic.NormalFormUtilities"/>
<fullyQualifiedTypeName name="com.geertenvink.Bardiche.ExclusiveDisjunctionExtension"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.logic.NAryBooleanExpression"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.logic.Conjunction"/>
<fullyQualifiedTypeName name="com.geertenvink.Bardiche.ExclusiveDisjunction"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.logic.Disjunction"/>
<fullyQualifiedTypeName name="com.geertenvink.Bardiche.BardicheGoal"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.io.pddl.PDDLManager"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.util.ImmutableList"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.util.ImmutableArray"/>
<fullyQualifiedTypeName name="java.util.LinkedList"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.logic.Substitution"/>
<fullyQualifiedTypeName name="java.util.List"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.io.pddl.sexp.Symbol"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.ArgumentMap"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.State"/>
<fullyQualifiedTypeName name="com.stephengware.java.glaive.GlaivePlan"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.AxiomTree"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.IntentionalProblem"/>
<fullyQualifiedTypeName name="com.stephengware.java.glaive.GlaiveRelaxedPlanBuilder"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.ss.IntentionalStateSpace"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.ig.IntentionGraph"/>
<fullyQualifiedTypeName name="com.stephengware.java.glaive.GlaiveSearchNode"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.logic.ModalExpression"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.logic.Literal"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.logic.NegatedLiteral"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.io.pddl.sexp.SExpression"/>
<fullyQualifiedTypeName name="java.beans.Expression"/>
<fullyQualifiedTypeName name="com.geertenvink.Bardiche.Possibility"/>
<fullyQualifiedTypeName name="com.stephengware.java.planware.logic.Expression"/>
<fullyQualifiedTypeName name="com.geertenvink.Bardiche.io.extensions.Templates.PossibilityTemplate"/>
</qualifiedTypeNameHistroy>
